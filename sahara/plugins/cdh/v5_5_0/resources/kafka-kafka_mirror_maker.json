[
    {
        "desc": "The maximum size, in megabytes, per log file for Kafka MirrorMaker logs.  Typically used by log4j or logback.",
        "display_name": "Kafka MirrorMaker Max Log Size",
        "name": "max_log_size",
        "value": "200"
    },
    {
        "desc": "Stop the entire mirror maker when a send failure occurs.",
        "display_name": "Abort on Send Failure",
        "name": "abort.on.send.failure",
        "value": "true"
    },
    {
        "desc": "The period to review when computing unexpected exits.",
        "display_name": "Unexpected Exits Monitoring Period",
        "name": "unexpected_exits_window",
        "value": "5"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Role Triggers parameter.",
        "display_name": "Suppress Parameter Validation: Role Triggers",
        "name": "role_config_suppression_role_triggers",
        "value": "false"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker TLS/SSL Server JKS Keystore Key Password parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker TLS/SSL Server JKS Keystore Key Password",
        "name": "role_config_suppression_ssl_server_keystore_keypassword",
        "value": "false"
    },
    {
        "desc": "Maximum number of bytes that can be buffered between producer and consumer. WARNING: Does not work with Kafka 2.0 or later.",
        "display_name": "Queue Size",
        "name": "queue.byte.size",
        "value": "100000000"
    },
    {
        "desc": "When set, Cloudera Manager will send alerts when the health of this role reaches the threshold specified by the EventServer setting eventserver_health_events_alert_threshold",
        "display_name": "Enable Health Alerts for this Role",
        "name": "enable_alerts",
        "value": "true"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker TLS/SSL Server JKS Keystore File Password parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker TLS/SSL Server JKS Keystore File Password",
        "name": "role_config_suppression_ssl_server_keystore_password",
        "value": "false"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker TLS/SSL Certificate Trust Store Password parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker TLS/SSL Certificate Trust Store Password",
        "name": "role_config_suppression_ssl_client_truststore_password",
        "value": "false"
    },
    {
        "desc": "Whether to suppress the results of the Unexpected Exits heath test. The results of suppressed health tests are ignored when computing the overall health of the associated host, role or service, so suppressed health tests will not generate alerts.",
        "display_name": "Suppress Health Test: Unexpected Exits",
        "name": "role_health_suppression_kafka_kafka_mirror_maker_unexpected_exits",
        "value": "false"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker Environment Advanced Configuration Snippet (Safety Valve) parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker Environment Advanced Configuration Snippet (Safety Valve)",
        "name": "role_config_suppression_kafka_mirror_maker_role_env_safety_valve",
        "value": "false"
    },
    {
        "desc": "If configured, overrides the process soft and hard rlimits (also called ulimits) for file descriptors to the configured value.",
        "display_name": "Maximum Process File Descriptors",
        "name": "rlimit_fds",
        "value": null
    },
    {
        "desc": "Only required if source Kafka cluster requires client authentication.",
        "display_name": "Source Kafka Cluster's Client Auth",
        "name": "source.ssl.client.auth",
        "value": "false"
    },
    {
        "desc": "When computing the overall Kafka MirrorMaker health, consider the host's health.",
        "display_name": "Kafka MirrorMaker Host Health Test",
        "name": "kafka_mirror_maker_host_health_enabled",
        "value": "true"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for ssl_client.properties parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for ssl_client.properties",
        "name": "role_config_suppression_ssl_client.properties_role_safety_valve",
        "value": "false"
    },
    {
        "desc": "The maximum number of rolled log files to keep for Kafka MirrorMaker logs.  Typically used by log4j or logback.",
        "display_name": "Kafka MirrorMaker Maximum Log File Backups",
        "name": "max_log_backup_index",
        "value": "10"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Topic Blacklist parameter.",
        "display_name": "Suppress Parameter Validation: Topic Blacklist",
        "name": "role_config_suppression_blacklist",
        "value": "false"
    },
    {
        "desc": "The minimum log level for Kafka MirrorMaker logs",
        "display_name": "Kafka MirrorMaker Logging Threshold",
        "name": "log_threshold",
        "value": "INFO"
    },
    {
        "desc": "Offset commit interval in milliseconds.",
        "display_name": "Offset Commit Interval",
        "name": "offset.commit.interval.ms",
        "value": "60000"
    },
    {
        "desc": "For advanced use only. A string to be inserted into <strong>mirror_maker_producers.properties</strong> for this role only.",
        "display_name": "Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for mirror_maker_producers.properties",
        "name": "mirror_maker_producers.properties_role_safety_valve",
        "value": null
    },
    {
        "desc": "Whether to suppress the results of the Host Health heath test. The results of suppressed health tests are ignored when computing the overall health of the associated host, role or service, so suppressed health tests will not generate alerts.",
        "display_name": "Suppress Health Test: Host Health",
        "name": "role_health_suppression_kafka_kafka_mirror_maker_host_health",
        "value": "false"
    },
    {
        "desc": "The health test thresholds of the number of file descriptors used. Specified as a percentage of file descriptor limit.",
        "display_name": "File Descriptor Monitoring Thresholds",
        "name": "kafka_mirror_maker_fd_thresholds",
        "value": "{\"critical\":\"70.0\",\"warning\":\"50.0\"}"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for ssl_server.properties parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for ssl_server.properties",
        "name": "role_config_suppression_ssl_server.properties_role_safety_valve",
        "value": "false"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the CDH Version Validator configuration validator.",
        "display_name": "Suppress Configuration Validator: CDH Version Validator",
        "name": "role_config_suppression_cdh_version_validator",
        "value": "false"
    },
    {
        "desc": "The password for the Kafka MirrorMaker JKS keystore file.",
        "display_name": "Kafka MirrorMaker TLS/SSL Server JKS Keystore File Password",
        "name": "ssl_server_keystore_password",
        "value": ""
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker Log Directory parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker Log Directory",
        "name": "role_config_suppression_log_dir",
        "value": "false"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Destination Broker List parameter.",
        "display_name": "Suppress Parameter Validation: Destination Broker List",
        "name": "role_config_suppression_bootstrap.servers",
        "value": "false"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker TLS/SSL Server JKS Keystore File Location parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker TLS/SSL Server JKS Keystore File Location",
        "name": "role_config_suppression_ssl_server_keystore_location",
        "value": "false"
    },
    {
        "desc": "Number of producer instances. WARNING: Does not work with Kafka 2.0 or later.",
        "display_name": "Number of Producers",
        "name": "num.producers",
        "value": "1"
    },
    {
        "desc": "For advanced use only. A string to be inserted into <strong>ssl_client.properties</strong> for this role only.",
        "display_name": "Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for ssl_client.properties",
        "name": "ssl_client.properties_role_safety_valve",
        "value": null
    },
    {
        "desc": "For advanced use only, key-value pairs (one on each line) to be inserted into a role's environment. Applies to configurations of this role except client configuration.",
        "display_name": "Kafka MirrorMaker Environment Advanced Configuration Snippet (Safety Valve)",
        "name": "KAFKA_MIRROR_MAKER_role_env_safety_valve",
        "value": null
    },
    {
        "desc": "Name of the consumer group used by MirrorMaker. When multiple role instances are configured with the same topics and same group ID, the role instances load-balance replication for the topics. When multiple role instances are configured with the same topics but different group ID, each role instance replicates all the events for those topics - this can be used to replicate the source cluster into multiple destination clusters.",
        "display_name": "Consumer Group ID",
        "name": "group.id",
        "value": "cloudera_mirrormaker"
    },
    {
        "desc": "The health test thresholds for unexpected exits encountered within a recent period specified by the unexpected_exits_window configuration for the role.",
        "display_name": "Unexpected Exits Thresholds",
        "name": "unexpected_exits_thresholds",
        "value": "{\"critical\":\"any\",\"warning\":\"never\"}"
    },
    {
        "desc": "Whether to suppress the results of the Swap Memory Usage heath test. The results of suppressed health tests are ignored when computing the overall health of the associated host, role or service, so suppressed health tests will not generate alerts.",
        "display_name": "Suppress Health Test: Swap Memory Usage",
        "name": "role_health_suppression_kafka_kafka_mirror_maker_swap_memory_usage",
        "value": "false"
    },
    {
        "desc": "When set, Cloudera Manager will send alerts when this entity's configuration changes.",
        "display_name": "Enable Configuration Change Alerts",
        "name": "enable_config_alerts",
        "value": "false"
    },
    {
        "desc": "Number of CPU shares to assign to this role. The greater the number of shares, the larger the share of the host's CPUs that will be given to this role when the host experiences CPU contention. Must be between 2 and 262144. Defaults to 1024 for processes not managed by Cloudera Manager.",
        "display_name": "Cgroup CPU Shares",
        "name": "rm_cpu_shares",
        "value": "1024"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Consumer Group ID parameter.",
        "display_name": "Suppress Parameter Validation: Consumer Group ID",
        "name": "role_config_suppression_group.id",
        "value": "false"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the MirrorMaker Consumer Rebalance Listener Arguments parameter.",
        "display_name": "Suppress Parameter Validation: MirrorMaker Consumer Rebalance Listener Arguments",
        "name": "role_config_suppression_consumer.rebalance.listener.args",
        "value": "false"
    },
    {
        "desc": "When set, this role's process is automatically (and transparently) restarted in the event of an unexpected failure.",
        "display_name": "Automatically Restart Process",
        "name": "process_auto_restart",
        "value": "false"
    },
    {
        "desc": "The location on disk of the trust store, in .jks format, used to confirm the authenticity of TLS/SSL servers that Kafka MirrorMaker might connect to. This is used when Kafka MirrorMaker is the client in a TLS/SSL connection. This trust store must contain the certificate(s) used to sign the service(s) connected to. If this parameter is not provided, the default list of well-known certificate authorities is used instead.",
        "display_name": "Kafka MirrorMaker TLS/SSL Certificate Trust Store File",
        "name": "ssl_client_truststore_location",
        "value": ""
    },
    {
        "desc": "Enables the health test that the Kafka MirrorMaker's process state is consistent with the role configuration",
        "display_name": "Kafka MirrorMaker Process Health Test",
        "name": "kafka_mirror_maker_scm_health_enabled",
        "value": "true"
    },
    {
        "desc": "Number of messages that are buffered between producer and consumer. WARNING: Does not work with Kafka 2.0 or later.",
        "display_name": "Message Queue Size",
        "name": "queue.size",
        "value": "10000"
    },
    {
        "desc": "<p>The configured triggers for this role. This is a JSON formatted list of triggers. These triggers are evaluated as part as the health system. Every trigger expression is parsed, and if the trigger condition is met, the list of actions provided in the trigger expression is executed.</p><p>Each trigger has the following fields:</p><ul><li><code>triggerName</code> <strong>(mandatory)</strong> - The name of the trigger. This value must be unique for the specific role. </li><li><code>triggerExpression</code> <strong>(mandatory)</strong> - A tsquery expression representing the trigger. </li><li><code>streamThreshold</code> <strong>(optional)</strong> - The maximum number of streams that can satisfy a condition of a trigger before the condition fires. By default set to 0, and any stream returned causes the condition to fire. </li><li><code>enabled</code> <strong> (optional)</strong> - By default set to 'true'. If set to 'false', the trigger is not evaluated.</li><li><code>expressionEditorConfig</code> <strong> (optional)</strong> - Metadata for the trigger editor. If present, the trigger should only be edited from the Edit Trigger page; editing the trigger here can lead to inconsistencies.</li></ul></p><p>For example, the following JSON formatted trigger configured for a DataNode fires if the DataNode has more than 1500 file descriptors opened:</p><p><pre>[{\"triggerName\": \"sample-trigger\",\n  \"triggerExpression\": \"IF (SELECT fd_open WHERE roleName=$ROLENAME and last(fd_open) > 1500) DO health:bad\",\n  \"streamThreshold\": 0, \"enabled\": \"true\"}]</pre></p><p>See the trigger rules documentation for more details on how to write triggers using tsquery.</p><p>The JSON format is evolving and may change and, as a result, backward compatibility is not guaranteed between releases.</p>",
        "display_name": "Role Triggers",
        "name": "role_triggers",
        "value": "[]"
    },
    {
        "desc": "Soft memory limit to assign to this role, enforced by the Linux kernel. When the limit is reached, the kernel will reclaim pages charged to the process if and only if the host is facing memory pressure. If reclaiming fails, the kernel may kill the process. Both anonymous as well as page cache pages contribute to the limit. Use a value of -1 B to specify no limit. By default processes not managed by Cloudera Manager will have no limit.",
        "display_name": "Cgroup Memory Soft Limit",
        "name": "rm_memory_soft_limit",
        "value": "-1"
    },
    {
        "desc": "A consumer rebalance listener of type ConsumerRebalanceListener to be invoked when MirrorMaker's consumer rebalances.",
        "display_name": "MirrorMaker Consumer Rebalance Listener",
        "name": "consumer.rebalance.listener",
        "value": ""
    },
    {
        "desc": "Run with MirrorMaker settings that eliminate potential loss of data. This impacts performance, but is highly recommended. WARNING: Does not work with Kafka 2.0 or later.",
        "display_name": "Avoid Data Loss",
        "name": "no.data.loss",
        "value": "true"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for mirror_maker_producers.properties parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for mirror_maker_producers.properties",
        "name": "role_config_suppression_mirror_maker_producers.properties_role_safety_valve",
        "value": "false"
    },
    {
        "desc": "For advanced use only. A string to be inserted into <strong>mirror_maker_consumers.properties</strong> for this role only.",
        "display_name": "Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for mirror_maker_consumers.properties",
        "name": "mirror_maker_consumers.properties_role_safety_valve",
        "value": null
    },
    {
        "desc": "Protocol to be used for communication with source kafka cluster.",
        "display_name": "Source Kafka Cluster's Security Protocol",
        "name": "source.security.protocol",
        "value": "PLAINTEXT"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the MirrorMaker Consumer Rebalance Listener parameter.",
        "display_name": "Suppress Parameter Validation: MirrorMaker Consumer Rebalance Listener",
        "name": "role_config_suppression_consumer.rebalance.listener",
        "value": "false"
    },
    {
        "desc": "Protocol to be used for communication with destination kafka cluster.",
        "display_name": "Destination Kafka Cluster's Security Protocol",
        "name": "destination.security.protocol",
        "value": "PLAINTEXT"
    },
    {
        "desc": "Regular expression that represents a set of topics to mirror. Note that whitelist and blacklist parameters are mutually exclusive. If both are defined, only the whilelist is used.",
        "display_name": "Topic Whitelist",
        "name": "whitelist",
        "value": ""
    },
    {
        "desc": "For advanced use only, a string to be inserted into <strong>log4j.properties</strong> for this role only.",
        "display_name": "Kafka MirrorMaker Logging Advanced Configuration Snippet (Safety Valve)",
        "name": "log4j_safety_valve",
        "value": null
    },
    {
        "desc": "Whether to suppress the results of the Process Status heath test. The results of suppressed health tests are ignored when computing the overall health of the associated host, role or service, so suppressed health tests will not generate alerts.",
        "display_name": "Suppress Health Test: Process Status",
        "name": "role_health_suppression_kafka_kafka_mirror_maker_scm_health",
        "value": "false"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Topic Whitelist parameter.",
        "display_name": "Suppress Parameter Validation: Topic Whitelist",
        "name": "role_config_suppression_whitelist",
        "value": "false"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker TLS/SSL Certificate Trust Store File parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker TLS/SSL Certificate Trust Store File",
        "name": "role_config_suppression_ssl_client_truststore_location",
        "value": "false"
    },
    {
        "desc": "Port for JMX.",
        "display_name": "JMX Port",
        "name": "jmx_port",
        "value": "9394"
    },
    {
        "desc": "Arguments used by MirrorMaker message handler.",
        "display_name": "MirrorMaker Message Handler Arguments",
        "name": "message.handler.args",
        "value": ""
    },
    {
        "desc": "List of brokers on destination cluster. This should be more than one, for high availability, but there's no need to list all brokers.",
        "display_name": "Destination Broker List",
        "name": "bootstrap.servers",
        "value": null
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Source Broker List parameter.",
        "display_name": "Suppress Parameter Validation: Source Broker List",
        "name": "role_config_suppression_source.bootstrap.servers",
        "value": "false"
    },
    {
        "desc": "Whether to suppress the results of the File Descriptors heath test. The results of suppressed health tests are ignored when computing the overall health of the associated host, role or service, so suppressed health tests will not generate alerts.",
        "display_name": "Suppress Health Test: File Descriptors",
        "name": "role_health_suppression_kafka_kafka_mirror_maker_file_descriptor",
        "value": "false"
    },
    {
        "desc": "The path to the TLS/SSL keystore file containing the server certificate and private key used for TLS/SSL. Used when Kafka MirrorMaker is acting as a TLS/SSL server. The keystore must be in JKS format.",
        "display_name": "Kafka MirrorMaker TLS/SSL Server JKS Keystore File Location",
        "name": "ssl_server_keystore_location",
        "value": ""
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the MirrorMaker Message Handler parameter.",
        "display_name": "Suppress Parameter Validation: MirrorMaker Message Handler",
        "name": "role_config_suppression_message.handler",
        "value": "false"
    },
    {
        "desc": "Only required if destination Kafka cluster requires client authentication.",
        "display_name": "Destination Kafka Cluster's Client Auth",
        "name": "destination.ssl.client.auth",
        "value": "false"
    },
    {
        "desc": "A MirrorMaker message handler of type MirrorMakerMessageHandler that will process every record in-between producer and consumer.",
        "display_name": "MirrorMaker Message Handler",
        "name": "message.handler",
        "value": ""
    },
    {
        "desc": "List of brokers on source cluster. This should be more than one, for high availability, but there's no need to list all brokers.",
        "display_name": "Source Broker List",
        "name": "source.bootstrap.servers",
        "value": null
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker Logging Advanced Configuration Snippet (Safety Valve) parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker Logging Advanced Configuration Snippet (Safety Valve)",
        "name": "role_config_suppression_log4j_safety_valve",
        "value": "false"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for mirror_maker_consumers.properties parameter.",
        "display_name": "Suppress Parameter Validation: Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for mirror_maker_consumers.properties",
        "name": "role_config_suppression_mirror_maker_consumers.properties_role_safety_valve",
        "value": "false"
    },
    {
        "desc": "Weight for the read I/O requests issued by this role. The greater the weight, the higher the priority of the requests when the host experiences I/O contention. Must be between 100 and 1000. Defaults to 1000 for processes not managed by Cloudera Manager.",
        "display_name": "Cgroup I/O Weight",
        "name": "rm_io_weight",
        "value": "500"
    },
    {
        "desc": "For advanced use only. A string to be inserted into <strong>ssl_server.properties</strong> for this role only.",
        "display_name": "Kafka MirrorMaker Advanced Configuration Snippet (Safety Valve) for ssl_server.properties",
        "name": "ssl_server.properties_role_safety_valve",
        "value": null
    },
    {
        "desc": "Number of consumer threads.",
        "display_name": "Number of Consumer Threads",
        "name": "num.streams",
        "value": "1"
    },
    {
        "desc": "The password that protects the private key contained in the JKS keystore used when Kafka MirrorMaker is acting as a TLS/SSL server.",
        "display_name": "Kafka MirrorMaker TLS/SSL Server JKS Keystore Key Password",
        "name": "ssl_server_keystore_keypassword",
        "value": ""
    },
    {
        "desc": "Encrypt communication between clients and Kafka MirrorMaker using Transport Layer Security (TLS) (formerly known as Secure Socket Layer (SSL)).",
        "display_name": "Enable TLS/SSL for Kafka MirrorMaker",
        "name": "ssl_enabled",
        "value": "false"
    },
    {
        "desc": "Regular expression that represents a set of topics to avoid mirroring. Note that whitelist and blacklist parameters are mutually exclusive. If both are defined, only the whilelist is used. WARNING: Does not work with Kafka 2.0 or later.",
        "display_name": "Topic Blacklist",
        "name": "blacklist",
        "value": ""
    },
    {
        "desc": "Hard memory limit to assign to this role, enforced by the Linux kernel. When the limit is reached, the kernel will reclaim pages charged to the process. If reclaiming fails, the kernel may kill the process. Both anonymous as well as page cache pages contribute to the limit. Use a value of -1 B to specify no limit. By default processes not managed by Cloudera Manager will have no limit.",
        "display_name": "Cgroup Memory Hard Limit",
        "name": "rm_memory_hard_limit",
        "value": "-1"
    },
    {
        "desc": "Arguments used by MirrorMaker consumer rebalance listener.",
        "display_name": "MirrorMaker Consumer Rebalance Listener Arguments",
        "name": "consumer.rebalance.listener.args",
        "value": ""
    },
    {
        "desc": "The log directory for log files of the role Kafka MirrorMaker.",
        "display_name": "Kafka MirrorMaker Log Directory",
        "name": "log_dir",
        "value": "/var/log/kafka"
    },
    {
        "desc": "Whether to suppress configuration warnings produced by the built-in parameter validation for the MirrorMaker Message Handler Arguments parameter.",
        "display_name": "Suppress Parameter Validation: MirrorMaker Message Handler Arguments",
        "name": "role_config_suppression_message.handler.args",
        "value": "false"
    },
    {
        "desc": "The password for the Kafka MirrorMaker TLS/SSL Certificate Trust Store File. This password is not required to access the trust store; this field can be left blank. This password provides optional integrity checking of the file. The contents of trust stores are certificates, and certificates are public information.",
        "display_name": "Kafka MirrorMaker TLS/SSL Certificate Trust Store Password",
        "name": "ssl_client_truststore_password",
        "value": ""
    },
    {
        "desc": "The health test thresholds on the swap memory usage of the process.",
        "display_name": "Process Swap Memory Thresholds",
        "name": "process_swap_memory_thresholds",
        "value": "{\"critical\":\"never\",\"warning\":\"any\"}"
    }
]