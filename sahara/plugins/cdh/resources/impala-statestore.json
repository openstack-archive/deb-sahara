[
    {
        "desc": "The health test thresholds for monitoring of free space on the filesystem that contains this role's log directory. Specified as a percentage of the capacity on that filesystem. This setting is not used if a Log Directory Free Space Monitoring Absolute Thresholds setting is configured.",
        "display_name": "Log Directory Free Space Monitoring Percentage Thresholds",
        "name": "log_directory_free_space_percentage_thresholds",
        "value": "{\"critical\":\"never\",\"warning\":\"never\"}"
    },
    {
        "desc": "Enables the health test that the Cloudera Manager Agent can successfully contact and gather metrics from the web server.",
        "display_name": "Web Metric Collection",
        "name": "statestore_web_metric_collection_enabled",
        "value": "true"
    },
    {
        "desc": "The amount of time allowed after this role is started that failures of health checks that rely on communication with this role will be tolerated.",
        "display_name": "Health Check Startup Tolerance",
        "name": "statestore_startup_tolerance",
        "value": "5"
    },
    {
        "desc": "For advanced use only, key-value pairs (one on each line) to be added (verbatim) to StateStore command line flags.",
        "display_name": "Statestore Command Line Argument Advanced Configuration Snippet (Safety Valve)",
        "name": "statestore_cmd_args_safety_valve",
        "value": null
    },
    {
        "desc": "The health test thresholds of the number of file descriptors used. Specified as a percentage of file descriptor limit.",
        "display_name": "File Descriptor Monitoring Thresholds",
        "name": "statestore_fd_thresholds",
        "value": "{\"critical\":\"70.0\",\"warning\":\"50.0\"}"
    },
    {
        "desc": "Weight for the read I/O requests issued by this role. The greater the weight, the higher the priority of the requests when the host experiences I/O contention. Must be between 100 and 1000. Defaults to 1000 for processes not managed by Cloudera Manager.",
        "display_name": "Cgroup I/O Weight",
        "name": "rm_io_weight",
        "value": "500"
    },
    {
        "desc": "Enables the health test that the Impala StateStore's process state is consistent with the role configuration",
        "display_name": "Impala StateStore Process Health Test",
        "name": "statestore_scm_health_enabled",
        "value": "true"
    },
    {
        "desc": "Port where StateStoreService is exported.",
        "display_name": "StateStore Service Port",
        "name": "state_store_port",
        "value": "24000"
    },
    {
        "desc": "When computing the overall Impala StateStore health, consider the host's health.",
        "display_name": "Impala StateStore Host Health Test",
        "name": "statestore_host_health_enabled",
        "value": "true"
    },
    {
        "desc": "When set, this role's process is automatically (and transparently) restarted in the event of an unexpected failure.",
        "display_name": "Automatically Restart Process",
        "name": "process_auto_restart",
        "value": "true"
    },
    {
        "desc": "<p>The configured triggers for this role. This is a JSON formatted list of triggers. These triggers are evaluated as part as the health system. Every trigger expression is parsed, and if the trigger condition is met, the list of actions provided in the trigger expression is executed.</p><p>Each trigger has all of the following fields:</p><ul><li><code>triggerName</code> <strong>(mandatory)</strong> - the name of the trigger. This value must be unique for the specific role. </li><li><code>triggerExpression</code> <strong>(mandatory)</strong> - a tsquery expression representing the trigger. </li><li><code>streamThreshold</code> <strong>(optional)</strong> - the maximum number of streams that can satisfy a condition of a trigger before the condition fires. By default set to 0, and any stream returned causes the condition to fire. </li><li><code>enabled</code> <strong> (optional)</strong> - by default set to 'true'. If set to 'false' the trigger will not be evaluated.</li></ul></p><p>For example, here is a JSON formatted trigger configured for a DataNode that fires if the DataNode has more than 1500 file-descriptors opened:</p><p><pre>[{\"triggerName\": \"sample-trigger\",\n  \"triggerExpression\": \"IF (SELECT fd_open WHERE roleName=$ROLENAME and last(fd_open) > 1500) DO health:bad\",\n  \"streamThreshold\": 0, \"enabled\": \"true\"}]</pre></p><p>Consult the trigger rules documentation for more details on how to write triggers using tsquery.</p><p>The JSON format is evolving and may change in the future and as a result backward compatibility is not guaranteed between releases at this time.</p>",
        "display_name": "Role Triggers",
        "name": "role_triggers",
        "value": "[]"
    },
    {
        "desc": "Soft memory limit to assign to this role, enforced by the Linux kernel. When the limit is reached, the kernel will reclaim pages charged to the process if and only if the host is facing memory pressure. If reclaiming fails, the kernel may kill the process. Both anonymous as well as page cache pages contribute to the limit. Use a value of -1 B to specify no limit. By default processes not managed by Cloudera Manager will have no limit.",
        "display_name": "Cgroup Memory Soft Limit",
        "name": "rm_memory_soft_limit",
        "value": "-1"
    },
    {
        "desc": "Username for Statestore webserver authentication.",
        "display_name": "Statestore Web Server Username",
        "name": "webserver_htpassword_user",
        "value": null
    },
    {
        "desc": "Number of CPU shares to assign to this role. The greater the number of shares, the larger the share of the host's CPUs that will be given to this role when the host experiences CPU contention. Must be between 2 and 262144. Defaults to 1024 for processes not managed by Cloudera Manager.",
        "display_name": "Cgroup CPU Shares",
        "name": "rm_cpu_shares",
        "value": "1024"
    },
    {
        "desc": "Maximum number of tasks allowed to be pending at the thread manager underlying the State Store Thrift server (0 allows infinitely many pending tasks)",
        "display_name": "Maximum StateStore Pending Tasks",
        "name": "state_store_pending_task_count_max",
        "value": "0"
    },
    {
        "desc": "Directory where StateStore will place its log files.",
        "display_name": "StateStore Log Directory",
        "name": "log_dir",
        "value": "/var/log/statestore"
    },
    {
        "desc": "The period to review when computing unexpected exits.",
        "display_name": "Unexpected Exits Monitoring Period",
        "name": "unexpected_exits_window",
        "value": "5"
    },
    {
        "desc": "Port where StateStore debug web server runs.",
        "display_name": "StateStore HTTP Server Port",
        "name": "statestore_webserver_port",
        "value": "25010"
    },
    {
        "desc": "Hard memory limit to assign to this role, enforced by the Linux kernel. When the limit is reached, the kernel will reclaim pages charged to the process. If reclaiming fails, the kernel may kill the process. Both anonymous as well as page cache pages contribute to the limit. Use a value of -1 B to specify no limit. By default processes not managed by Cloudera Manager will have no limit.",
        "display_name": "Cgroup Memory Hard Limit",
        "name": "rm_memory_hard_limit",
        "value": "-1"
    },
    {
        "desc": "The health test thresholds for monitoring of free space on the filesystem that contains this role's log directory.",
        "display_name": "Log Directory Free Space Monitoring Absolute Thresholds",
        "name": "log_directory_free_space_absolute_thresholds",
        "value": "{\"critical\":\"5.36870912E9\",\"warning\":\"1.073741824E10\"}"
    },
    {
        "desc": "If configured, overrides the process soft and hard rlimits (also called ulimits) for file descriptors to the configured value.",
        "display_name": "Maximum Process File Descriptors",
        "name": "rlimit_fds",
        "value": null
    },
    {
        "desc": "When set, Cloudera Manager will send alerts when the health of this role reaches the threshold specified by the EventServer setting eventserver_health_events_alert_threshold",
        "display_name": "Enable Health Alerts for this Role",
        "name": "enable_alerts",
        "value": "true"
    },
    {
        "desc": "The maximum size, in megabytes, per log file for Impala StateStore logs.  Typically used by log4j.",
        "display_name": "Impala StateStore Max Log Size",
        "name": "max_log_size",
        "value": "200"
    },
    {
        "desc": "Number of worker threads for the thread manager underlying the State Store Thrift server.",
        "display_name": "StateStore Worker Threads",
        "name": "state_store_num_server_worker_threads",
        "value": "4"
    },
    {
        "desc": "The health test thresholds for unexpected exits encountered within a recent period specified by the unexpected_exits_window configuration for the role.",
        "display_name": "Unexpected Exits Thresholds",
        "name": "unexpected_exits_thresholds",
        "value": "{\"critical\":\"any\",\"warning\":\"never\"}"
    },
    {
        "desc": "When set, Cloudera Manager will send alerts when this entity's configuration changes.",
        "display_name": "Enable Configuration Change Alerts",
        "name": "enable_config_alerts",
        "value": "false"
    },
    {
        "desc": "Verbose logging level for the GLog logger. These messages are always logged at 'INFO' log level, so this setting has no effect if Logging Threshold is set to 'WARN' or above.  ",
        "display_name": "StateStore Verbose Log Level",
        "name": "log_verbose_level",
        "value": "1"
    },
    {
        "desc": "The health test thresholds on the resident size of the process.",
        "display_name": "Resident Set Size Thresholds",
        "name": "process_resident_set_size_thresholds",
        "value": "{\"critical\":\"never\",\"warning\":\"never\"}"
    },
    {
        "desc": "Buffer log messages logged at this level or lower (-1 means don't buffer; 0 means buffer INFO only; 1 means buffer WARNING only, ...)",
        "display_name": "StateStore Log Buffer Level",
        "name": "logbuflevel",
        "value": "0"
    },
    {
        "desc": "The location of the debug webserver's SSL certificate file, in .pem format. If empty, webserver SSL support is not enabled.",
        "display_name": "SSL Certificate File Location",
        "name": "webserver_certificate_file",
        "value": null
    },
    {
        "desc": "Enable/Disable StateStore web server. This web server contains useful information about StateStore daemon.",
        "display_name": "Enable StateStore Web Server",
        "name": "statestore_enable_webserver",
        "value": "true"
    },
    {
        "desc": "Password for Statestore webserver authentication.",
        "display_name": "Statestore Web Server User Password",
        "name": "webserver_htpassword_password",
        "value": null
    },
    {
        "desc": "The minimum log level for Impala StateStore logs",
        "display_name": "Impala StateStore Logging Threshold",
        "name": "log_threshold",
        "value": "INFO"
    },
    {
        "desc": "The health test thresholds on the duration of the metrics request to the web server.",
        "display_name": "Web Metric Collection Duration",
        "name": "statestore_web_metric_collection_thresholds",
        "value": "{\"critical\":\"never\",\"warning\":\"10000.0\"}"
    }
]