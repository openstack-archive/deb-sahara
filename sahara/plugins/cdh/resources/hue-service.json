[
    {
        "desc": "Create users in Hue when they try to login with their LDAP credentials. For use when using LdapBackend for Hue authentication.",
        "display_name": "Create LDAP users on login",
        "name": "create_users_on_login",
        "value": "true"
    },
    {
        "desc": "Number of threads used by the Hue web server.",
        "display_name": "Hue Web Server Threads",
        "name": "cherrypy_server_threads",
        "value": "10"
    },
    {
        "desc": "Thrift server to use for HBase app.",
        "display_name": "HBase Thrift Server",
        "name": "hue_hbase_thrift",
        "value": null
    },
    {
        "desc": "Name of the Oozie service that this Hue service instance depends on",
        "display_name": "Oozie Service",
        "name": "oozie_service",
        "value": null
    },
    {
        "desc": "The distinguished name to use as a search base for finding users and groups.",
        "display_name": "LDAP Search Base",
        "name": "base_dn",
        "value": null
    },
    {
        "desc": "Comma-separated list of regular expressions, which match 'host:port' of requested proxy target.",
        "display_name": "Whitelist",
        "name": "whitelist",
        "value": "(localhost|127\\.0\\.0\\.1):(50030|50070|50060|50075)"
    },
    {
        "desc": "Name of the Sentry service that this Hue service instance depends on",
        "display_name": "Sentry Service",
        "name": "sentry_service",
        "value": null
    },
    {
        "desc": "Name of the HBase service that this Hue service instance depends on",
        "display_name": "HBase Service",
        "name": "hbase_service",
        "value": null
    },
    {
        "desc": "Base filter for searching for groups",
        "display_name": "LDAP Group Filter",
        "name": "group_filter",
        "value": null
    },
    {
        "desc": "Time zone name.",
        "display_name": "Time Zone",
        "name": "time_zone",
        "value": "America/Los_Angeles"
    },
    {
        "desc": "The health test thresholds of the overall Kerberos Ticket Renewer health. The check returns \"Concerning\" health if the percentage of \"Healthy\" Kerberos Ticket Renewers falls below the warning threshold. The check is unhealthy if the total percentage of \"Healthy\" and \"Concerning\" Kerberos Ticket Renewers falls below the critical threshold.",
        "display_name": "Healthy Kerberos Ticket Renewer Monitoring Thresholds",
        "name": "hue_kt_renewers_healthy_thresholds",
        "value": "{\"critical\":\"51.0\",\"warning\":\"99.0\"}"
    },
    {
        "desc": "The user that this service's processes should run as.",
        "display_name": "System User",
        "name": "process_username",
        "value": "hue"
    },
    {
        "desc": "The health test thresholds of the overall Hue Server health. The check returns \"Concerning\" health if the percentage of \"Healthy\" Hue Servers falls below the warning threshold. The check is unhealthy if the total percentage of \"Healthy\" and \"Concerning\" Hue Servers falls below the critical threshold.",
        "display_name": "Healthy Hue Server Monitoring Thresholds",
        "name": "hue_hue_servers_healthy_thresholds",
        "value": "{\"critical\":\"51.0\",\"warning\":\"99.0\"}"
    },
    {
        "desc": "When set, Cloudera Manager will send alerts when this entity's configuration changes.",
        "display_name": "Enable Configuration Change Alerts",
        "name": "enable_config_alerts",
        "value": "false"
    },
    {
        "desc": "The group name attribute in the LDAP schema.",
        "display_name": "LDAP Group Name Attribute",
        "name": "group_name_attr",
        "value": null
    },
    {
        "desc": "HDFS directory used for storing temporary files.",
        "display_name": "HDFS Temporary Directory",
        "name": "hdfs_tmp_dir",
        "value": "/tmp"
    },
    {
        "desc": "Name of the Solr service that this Hue service instance depends on",
        "display_name": "Solr Service",
        "name": "solr_service",
        "value": null
    },
    {
        "desc": "If the database is SQLite3, this is the filename of the database to use, and the directory of this file must be writable by the 'hue' user.",
        "display_name": "Hue Database Directory",
        "name": "database_dir",
        "value": "/var/lib/hue/desktop.db"
    },
    {
        "desc": "The name of a default group that users will be added to at creation time.",
        "display_name": "Default User Group",
        "name": "default_user_group",
        "value": null
    },
    {
        "desc": "When you enable anonymous usage data collection Hue tracks anonymised pages and application versions in order to gather information about each application's usage levels. The data collected does not include any hostnames or IDs. Data collection option is available on CDH 4.4 and later deployments.",
        "display_name": "Enable Usage Data Collection",
        "name": "usage_data_collection_enable",
        "value": "true"
    },
    {
        "desc": "Name of the ZooKeeper service that this Hue service instance depends on",
        "display_name": "ZooKeeper Service",
        "name": "zookeeper_service",
        "value": null
    },
    {
        "desc": "Distinguished name of the user to bind as -- not necessary if the LDAP server supports anonymous searches.",
        "display_name": "LDAP Bind User",
        "name": "bind_dn",
        "value": null
    },
    {
        "desc": "URL of LDAP Server",
        "display_name": "LDAP URL",
        "name": "ldap_url",
        "value": null
    },
    {
        "desc": "Whether to use StartTLS (as opposed to ldaps) to communicate securely with the LDAP server. This is only effective when the LDAP certificate is specified.",
        "display_name": "Use StartTLS",
        "name": "use_start_tls",
        "value": "true"
    },
    {
        "desc": "Name of the Sqoop service that this Hue service instance depends on",
        "display_name": "Sqoop Service",
        "name": "sqoop_service",
        "value": null
    },
    {
        "desc": "Active Directory Domain",
        "display_name": "NT Domain",
        "name": "nt_domain",
        "value": null
    },
    {
        "desc": "Class that defines extra accessor methods for user objects.",
        "display_name": "User Augmentor",
        "name": "user_augmentor",
        "value": "desktop.auth.backend.DefaultUserAugmentor"
    },
    {
        "desc": "File where the database gets dumped to or loaded from.",
        "display_name": "Database Dump File",
        "name": "database_dump_file",
        "value": "/tmp/hue_database_dump.json"
    },
    {
        "desc": "LDAP Username Pattern for use with non-Active Directory LDAP implementations. Must contain the special '&ltusername&gt' string for replacement during authentication.",
        "display_name": "LDAP Username Pattern",
        "name": "ldap_username_pattern",
        "value": null
    },
    {
        "desc": "The password of the bind user.",
        "display_name": "LDAP Bind Password",
        "name": "bind_password",
        "value": null
    },
    {
        "desc": "The group that this service's processes should run as.",
        "display_name": "System Group",
        "name": "process_groupname",
        "value": "hue"
    },
    {
        "desc": "LDAP certificate for authentication over TLS",
        "display_name": "LDAP Certificate",
        "name": "ldap_cert",
        "value": null
    },
    {
        "desc": "Type of database used for Hue",
        "display_name": "Hue Database Type",
        "name": "database_type",
        "value": "sqlite3"
    },
    {
        "desc": "When set, Cloudera Manager will send alerts when the health of this service reaches the threshold specified by the EventServer setting eventserver_health_events_alert_threshold",
        "display_name": "Enable Service Level Health Alerts",
        "name": "enable_alerts",
        "value": "true"
    },
    {
        "desc": "When computing the overall HUE health, consider Beeswax Server's health",
        "display_name": "Beeswax Server Role Health Test",
        "name": "hue_beeswax_server_health_enabled",
        "value": "true"
    },
    {
        "desc": "HTTPFS role or Namenode (if webhdfs is enabled) that hue can use to communicate with HDFS.",
        "display_name": "HDFS Web Interface Role",
        "name": "hue_webhdfs",
        "value": null
    },
    {
        "desc": "Mode of authenticating login credentials. Select desktop.auth.backend.LdapBackend to use LDAP to authenticate login credentials. LDAP requires you to also set the LDAP URL, NT Domain, and optionally LDAP certificate if you are using secure LDAP. Select desktop.auth.backend.PamBackend to use PAM to authenticate login credentials.",
        "display_name": "Authentication Backend",
        "name": "auth_backend",
        "value": "desktop.auth.backend.AllowFirstUserDjangoBackend"
    },
    {
        "desc": "<p>The configured triggers for this service. This is a JSON formatted list of triggers. These triggers are evaluated as part as the health system. Every trigger expression is parsed, and if the trigger condition is met, the list of actions provided in the trigger expression is executed.</p><p>Each trigger has all of the following fields:</p><ul><li><code>triggerName</code> <strong>(mandatory)</strong> - the name of the trigger. This value must be unique for the specific service. </li><li><code>triggerExpression</code> <strong>(mandatory)</strong> - a tsquery expression representing the trigger. </li><li><code>streamThreshold</code> <strong>(optional)</strong> - the maximum number of streams that can satisfy a condition of a trigger before the condition fires. By default set to 0, and any stream returned causes the condition to fire. </li><li><code>enabled</code> <strong> (optional)</strong> - by default set to 'true'. If set to 'false' the trigger will not be evaluated.</li></ul></p><p>For example, here is a JSON formatted trigger that fires if there are more than 10 DataNodes with more than 500 file-descriptors opened:</p><p><pre>[{\"triggerName\": \"sample-trigger\",\n  \"triggerExpression\": \"IF (SELECT fd_open WHERE roleType = DataNode and last(fd_open) > 500) DO health:bad\",\n  \"streamThreshold\": 10, \"enabled\": \"true\"}]</pre></p><p>Consult the trigger rules documentation for more details on how to write triggers using tsquery.</p><p>The JSON format is evolving and may change in the future and as a result backward compatibility is not guaranteed between releases at this time.</p>",
        "display_name": "Service Triggers",
        "name": "service_triggers",
        "value": "[]"
    },
    {
        "desc": "The username to use to log into the Hue database. Not necessary for SQLite3.",
        "display_name": "Hue Database Username",
        "name": "database_user",
        "value": "hue"
    },
    {
        "desc": "Comma-separated list of regular expressions, which match any prefix of 'host:port/path' of requested proxy target. This does not support matching GET parameters.",
        "display_name": "Blacklist",
        "name": "blacklist",
        "value": "()"
    },
    {
        "desc": "For advanced use only, a string to be inserted into <strong>sentry-site.xml</strong>. Applies to configurations of all roles in this service except client configuration.",
        "display_name": "Hue Service Advanced Configuration Snippet (Safety Valve) for sentry-site.xml",
        "name": "hue_sentry_safety_valve",
        "value": null
    },
    {
        "desc": "For advanced use only, key-value pairs (one on each line) to be inserted into a role's environment. Applies to configurations of all roles in this service except client configuration.",
        "display_name": "Hue Service Environment Advanced Configuration Snippet (Safety Valve)",
        "name": "hue_service_env_safety_valve",
        "value": null
    },
    {
        "desc": "Name of the Impala service that this Hue service instance depends on",
        "display_name": "Impala Service",
        "name": "impala_service",
        "value": null
    },
    {
        "desc": "Name of Hue database.",
        "display_name": "Hue Database Name",
        "name": "database_name",
        "value": "hue"
    },
    {
        "desc": "The attribute of the group object which identifies the members of the group.",
        "display_name": "LDAP Group Membership Attribute",
        "name": "group_member_attr",
        "value": null
    },
    {
        "desc": "Name of the Hive service that this Hue service instance depends on",
        "display_name": "Hive Service",
        "name": "hive_service",
        "value": null
    },
    {
        "desc": "The username attribute in the LDAP schema.",
        "display_name": "LDAP Username Attribute",
        "name": "user_name_attr",
        "value": null
    },
    {
        "desc": "Default encoding for site data.",
        "display_name": "Default Site Encoding",
        "name": "default_site_encoding",
        "value": "utf"
    },
    {
        "desc": "Search Bind Authentication connects to the LDAP server using credentials provided in the 'bind_dn' and 'bind_password' configurations. If these configurations are not set, then an anonymous search is performed.",
        "display_name": "Use Search Bind Authentication",
        "name": "search_bind_authentication",
        "value": "false"
    },
    {
        "desc": "For advanced use only, a string to be inserted into <strong>hue_safety_valve.ini</strong>. Applies to configurations of all roles in this service except client configuration.",
        "display_name": "Hue Service Advanced Configuration Snippet (Safety Valve) for hue_safety_valve.ini",
        "name": "hue_service_safety_valve",
        "value": null
    },
    {
        "desc": "Port on host where the Hue database is running. Not necessary for SQLite3.",
        "display_name": "Hue Database Port",
        "name": "database_port",
        "value": "3306"
    },
    {
        "desc": "Password for Hue database. Not necessary for SQLite3.",
        "display_name": "Hue Database Password",
        "name": "database_password",
        "value": ""
    },
    {
        "desc": "Base filter for searching for users.",
        "display_name": "LDAP User Filter",
        "name": "user_filter",
        "value": null
    },
    {
        "desc": "For advanced use only, a list of derived configuration properties that will be used by the Service Monitor instead of the default ones.",
        "display_name": "Service Monitor Derived Configs Advanced Configuration Snippet (Safety Valve)",
        "name": "smon_derived_configs_safety_valve",
        "value": null
    },
    {
        "desc": "Name of host where the Hue database is running. Not necessary for SQLite3.",
        "display_name": "Hue Database Hostname",
        "name": "database_host",
        "value": "localhost"
    }
]